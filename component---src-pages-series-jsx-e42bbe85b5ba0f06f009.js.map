{"version":3,"file":"component---src-pages-series-jsx-e42bbe85b5ba0f06f009.js","mappings":"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","sources":["webpack://gatsby-starter-hoodie/./src/components/SeriesList/index.jsx","webpack://gatsby-starter-hoodie/./src/pages/series.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\n\nimport Title from \"components/Title\"\nimport Divider from \"components/Divider\"\n\nconst SeriesListWrapper = styled.div`\n  margin-bottom: 60px;\n  @media (max-width: 768px) {\n    padding: 0 10px;\n  }\n`\n\nconst SeriesWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 768px) {\n    padding: 0 5px;\n  }\n`\n\nconst SeriesInform = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.colors.tertiaryText};\n\n  & > span {\n    margin: 0 5px;\n  }\n`\n\nconst Date = styled.p`\n  font-size: 14.4px;\n`\n\nconst PostCount = styled.p`\n  font-size: 14.4px;\n`\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  )\n}\n\nconst SeriesList = ({ seriesList }) => {\n  const [seriesCount, setSeriesCount] = useState(10)\n\n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && seriesCount < seriesList.length) {\n      setTimeout(() => setSeriesCount(seriesCount + 10), 300)\n    }\n  }, 250)\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleMoreLoad)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleMoreLoad)\n    }\n  }, [seriesCount, seriesList])\n\n  useEffect(() => {\n    setSeriesCount(10)\n  }, [seriesList])\n\n  return (\n    <SeriesListWrapper>\n      {seriesList.slice(0, seriesCount).map((series, i) => {\n        return (\n          <>\n            <SeriesWrapper>\n              <Title size=\"bg\">\n                <Link to={`/series/${_.replace(series.name, /\\s/g, \"-\")}`}>\n                  {series.name}\n                </Link>\n              </Title>\n              <SeriesInform>\n                <PostCount>{series.posts.length} Posts</PostCount>\n                <span>Â·</span>\n                <Date>Last updated on {series.lastUpdated}</Date>\n              </SeriesInform>\n            </SeriesWrapper>\n\n            {seriesCount - 1 !== i && seriesList.length - 1 !== i && (\n              <Divider mt=\"48px\" mb=\"32px\" />\n            )}\n          </>\n        )\n      })}\n    </SeriesListWrapper>\n  )\n}\n\nexport default SeriesList\n","import React from \"react\"\nimport { flow, map, groupBy, sortBy, filter, reverse } from \"lodash/fp\"\nimport styled from \"styled-components\"\nimport SEO from \"components/SEO\"\n\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport Title from \"components/Title\"\nimport SeriesList from \"components/SeriesList\"\nimport VerticleSpace from \"components/VerticalSpace\"\nimport NoContent from \"components/NoContent\"\n\nimport { title, description, siteUrl } from \"../../blog-config\"\n\nconst TagListWrapper = styled.div`\n  margin-top: 20px;\n\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`\n\nconst SeriesPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n  const series = flow(\n    map(post => ({ ...post.frontmatter, slug: post.fields.slug })),\n    groupBy(\"series\"),\n    map(series => ({\n      name: series[0].series,\n      posts: series,\n      lastUpdated: series[0].date,\n    })),\n    sortBy(series => new Date(series.lastUpdated)),\n    filter(series => series.name),\n    reverse\n  )(posts)\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n\n      <TagListWrapper>\n        {series.length > 0 && (\n          <Title size=\"sm\">There are {series.length} series.</Title>\n        )}\n      </TagListWrapper>\n\n      {series.length === 0 && <NoContent name=\"series\" />}\n\n      <VerticleSpace size={32} />\n\n      <SeriesList seriesList={series} />\n    </Layout>\n  )\n}\n\nexport default SeriesPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n          series\n        }\n      }\n    }\n  }\n`\n"],"names":["SeriesListWrapper","styled","div","withConfig","displayName","componentId","SeriesWrapper","SeriesInform","props","theme","colors","tertiaryText","Date","p","PostCount","_ref","seriesList","seriesCount","setSeriesCount","useState","handleMoreLoad","_throttle","document","documentElement","scrollHeight","scrollTop","clientHeight","length","setTimeout","useEffect","window","addEventListener","removeEventListener","React","slice","map","series","i","Title","size","Link","to","_replace","name","posts","lastUpdated","Divider","mt","mb","TagListWrapper","data","allMarkdownRemark","nodes","_flow","_map","post","frontmatter","slug","fields","_groupBy","date","_sortBy","_filter","_reverse","Layout","SEO","title","description","url","siteUrl","NoContent","VerticleSpace","SeriesList"],"sourceRoot":""}