{"version":3,"file":"component---src-templates-blog-template-js-c7ff1bf4ca21bd4ef693.js","mappings":"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","sources":["webpack://zoomkoding.com/./src/components/post-header/index.js","webpack://zoomkoding.com/./src/components/post-navigator/index.js","webpack://zoomkoding.com/./src/components/post-content/index.js","webpack://zoomkoding.com/./src/components/giscus/index.js","webpack://zoomkoding.com/./src/templates/blog-template.js"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostHeader({ post, viewCount }) {\n  return (\n    <header className=\"post-header\">\n      {post.emoji && <div className=\"emoji\">{post.emoji}</div>}\n      <div className=\"info\">\n        <div className=\"categories\">\n          {post.categories.map((category) => (\n            <Link className=\"category\" key={category} to={`/posts/${category}`}>\n              {category}\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      <h1 className=\"title\">{post.title}</h1>\n      <div className=\"info\">\n        <div className=\"author\">\n          posted by <strong>{post.author}</strong>,\n        </div>{' '}\n        {post.date}\n        {viewCount && ` · ${viewCount} views`}\n      </div>\n    </header>\n  );\n}\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostNavigator({ prevPost, nextPost }) {\n  return (\n    <div className=\"post-navigator\">\n      <div className=\"post-navigator-card-wrapper\">\n        {nextPost && (\n          <Link className=\"post-card prev\" key={nextPost.id} to={nextPost.slug}>\n            <div className=\"direction\">이전 글</div>\n            <div className=\"title\">{nextPost.title}</div>\n          </Link>\n        )}\n      </div>\n      <div className=\"post-navigator-card-wrapper\">\n        {prevPost && (\n          <Link className=\"post-card next\" key={prevPost.id} to={prevPost.slug}>\n            <div className=\"direction\">다음 글</div>\n            <div className=\"title\">{prevPost.title}</div>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PostNavigator;\n","import React from 'react';\nimport './style.scss';\n\nfunction PostContent({ html }) {\n  return (\n    <div className=\"post-content\">\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n}\n\nexport default PostContent;\n","import React, { createRef, useEffect, useRef } from 'react';\n\nconst src = 'https://giscus.app/client.js';\n\nfunction Giscus({ repo, path }) {\n  const rootElm = createRef();\n  const isGiscusLoaded = useRef(false);\n\n  useEffect(() => {\n    if (!rootElm.current || isGiscusLoaded.current) return;\n    const storedIsDarkMode = localStorage.getItem('isDarkMode');\n\n    const giscus = document.createElement('script');\n    const giscusConfig = {\n      src,\n      'data-repo': repo,\n      'data-repo-id': 'R_kgDOJqNN5Q',\n      'data-category': 'Announcements',\n      'data-category-id': 'DIC_kwDOJqNN5c4CW4sz',\n      'data-mapping': 'pathname',\n      'data-strict': '0',\n      'data-reactions-enabled': '1',\n      'data-emit-metadata': '0',\n      'data-input-position': 'bottom',\n      'data-theme': JSON.parse(storedIsDarkMode) ? 'dark_dimmed' : 'light',\n      'data-lang': 'en',\n      'data-loading': 'lazy',\n      crossorigin: 'anonymous',\n      async: true,\n    };\n\n    Object.keys(giscusConfig).forEach((configKey) => {\n      giscus.setAttribute(configKey, giscusConfig[configKey]);\n    });\n    rootElm.current.appendChild(giscus);\n    isGiscusLoaded.current = true;\n  }, [repo, rootElm, path]);\n\n  return <div className=\"giscus\" ref={rootElm} />;\n}\n\nexport default Giscus;\n","import React, { useEffect, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport PostHeader from '../components/post-header';\nimport PostNavigator from '../components/post-navigator';\nimport Post from '../models/post';\nimport PostContent from '../components/post-content';\nimport Giscus from '../components/giscus';\n\nfunction BlogTemplate({ data }) {\n  const [viewCount, setViewCount] = useState(null);\n\n  const curPost = new Post(data.cur);\n  const prevPost = data.prev && new Post(data.prev);\n  const nextPost = data.next && new Post(data.next);\n  const { siteUrl, comments } = data.site?.siteMetadata;\n  const giscusRepo = comments?.giscus?.repo;\n\n  useEffect(() => {\n    if (!siteUrl) return;\n    const namespace = siteUrl.replace(/(^\\w+:|^)\\/\\//, '');\n    const key = curPost.slug.replace(/\\//g, '');\n\n    fetch(\n      `https://api.countapi.xyz/${\n        process.env.NODE_ENV === 'development' ? 'get' : 'hit'\n      }/${namespace}/${key}`,\n    ).then(async (result) => {\n      const data = await result.json();\n      setViewCount(data.value);\n    });\n  }, [siteUrl, curPost.slug]);\n\n  return (\n    <Layout>\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\n      <PostHeader post={curPost} viewCount={viewCount} />\n      <PostContent html={curPost.html} />\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\n      {giscusRepo && <Giscus repo={giscusRepo} path={curPost.slug} />}\n    </Layout>\n  );\n}\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n  query ($slug: String, $nextSlug: String, $prevSlug: String) {\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 500, truncate: true)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          giscus {\n            repo\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","post","viewCount","React","className","emoji","categories","map","category","Link","key","to","title","author","date","prevPost","nextPost","id","slug","html","dangerouslySetInnerHTML","__html","repo","path","rootElm","createRef","isGiscusLoaded","useRef","useEffect","current","storedIsDarkMode","localStorage","getItem","giscus","document","createElement","giscusConfig","src","JSON","parse","crossorigin","async","Object","keys","forEach","configKey","setAttribute","appendChild","ref","_data$site","_comments$giscus","data","setViewCount","useState","curPost","Post","cur","prev","next","siteUrl","comments","site","siteMetadata","giscusRepo","namespace","replace","fetch","then","result","json","value","Layout","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Giscus"],"sourceRoot":""}