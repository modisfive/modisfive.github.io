{"componentChunkName":"component---src-templates-post-jsx","path":"/boj-1365/","result":{"data":{"site":{"siteMetadata":{"title":"pointing the dots"}},"markdownRemark":{"id":"1948a1d0-9b32-57fd-9b38-efcb9fd17ea9","excerpt":"☘️ 문제 https://www.acmicpc.net/problem/1365 ☘️ 풀이 대표적인 LIS(최장 증가 부분 수열) 문제입니다. 전깃줄이 꼬여있지 않기 위해서는 오른편에서 연결된 전봇대 번호가 순서대로 증가해야 합니다. 예를 들어 오른편의 전봇대 중에서 선택된 전봇대의 번호가 라면, 2와 4를 연결할 때 꼬이게 됩니다. 또한, N이 최대 10만이기…","html":"<h2>☘️ 문제</h2>\n<p><a href=\"https://www.acmicpc.net/problem/1365\">https://www.acmicpc.net/problem/1365</a></p>\n<h2>☘️ 풀이</h2>\n<p>대표적인 LIS(최장 증가 부분 수열) 문제입니다.</p>\n<p>전깃줄이 꼬여있지 않기 위해서는 오른편에서 연결된 전봇대 번호가 순서대로 증가해야 합니다. 예를 들어 오른편의 전봇대 중에서 선택된 전봇대의 번호가 <code class=\"language-text\">2 4 1</code>라면, 2와 4를 연결할 때 꼬이게 됩니다. 또한, N이 최대 10만이기 때문에 이분탐색을 활용한 LIS 문제로 풀어야 합니다.</p>\n<p>문제에서는 잘라내야 할 전선의 수를 구해야 하기 때문에, 전체 전선의 수(N)개에서 LIS의 길이를 빼면 됩니다.</p>\n<h2>☘️ 전체 코드 (파이썬)</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">lowerBound</span><span class=\"token punctuation\">(</span>lis<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    left<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>lis<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">:</span>\n        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">if</span> lis<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">:</span>\n            left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            right <span class=\"token operator\">=</span> mid\n    <span class=\"token keyword\">return</span> right\n\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnumbers <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nlis <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> lis<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        lis<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        index <span class=\"token operator\">=</span> lowerBound<span class=\"token punctuation\">(</span>lis<span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        lis<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>lis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[백준/BOJ] 1365. 꼬인 전깃줄 (파이썬)","date":"April 03, 2024","tags":["PS","BOJ","백준","Python","다이나믹프로그래밍","이분탐색","LIS"],"series":null},"fields":{"slug":"/boj-1365/"}},"seriesList":{"edges":[{"node":{"id":"6df80ce2-79eb-584d-871c-9ec94a17114c","fields":{"slug":"/n+1-problem/"},"frontmatter":{"title":"[JPA] N+1 문제와 해결법"}}},{"node":{"id":"bcaaf6e4-35eb-571f-9a88-4542117a9f40","fields":{"slug":"/http-vs-https/"},"frontmatter":{"title":"[Network] HTTP와 HTTPS"}}},{"node":{"id":"8894e599-37c7-5129-ab21-244e05db5ad2","fields":{"slug":"/boj-5549/"},"frontmatter":{"title":"[백준/BOJ] 5549. 행성 탐사 (파이썬)"}}},{"node":{"id":"a6cccf72-ac4a-5a0a-94d6-f0fd6a37c67c","fields":{"slug":"/boj-22862/"},"frontmatter":{"title":"[백준/BOJ] 22862. 가장 긴 짝수 연속한 부분 수열 (large) (파이썬)"}}},{"node":{"id":"b705571c-56ed-53b8-bc4a-28b8a6ac225b","fields":{"slug":"/boj-13144/"},"frontmatter":{"title":"[백준/BOJ] 13144. List of Unique Numbers (파이썬)"}}},{"node":{"id":"25166810-bce0-59df-be14-b482f52201b9","fields":{"slug":"/programmers-67259/"},"frontmatter":{"title":"[프로그래머스] 67259. 경주로 건설 (파이썬)"}}},{"node":{"id":"57c571b1-1719-5a80-8532-5a6140d2eefc","fields":{"slug":"/boj-3020/"},"frontmatter":{"title":"[백준/BOJ] 3020. 개똥벌레 (파이썬/자바)"}}},{"node":{"id":"1948a1d0-9b32-57fd-9b38-efcb9fd17ea9","fields":{"slug":"/boj-1365/"},"frontmatter":{"title":"[백준/BOJ] 1365. 꼬인 전깃줄 (파이썬)"}}},{"node":{"id":"cedea521-2919-5b27-8c40-5b7b7955957d","fields":{"slug":"/boj-2560/"},"frontmatter":{"title":"[백준/BOJ] 2560. 짚신벌레 (파이썬)"}}},{"node":{"id":"d4fa2a6f-24b5-5c1e-994d-83f00f4be67d","fields":{"slug":"/boj-11066/"},"frontmatter":{"title":"[백준/BOJ] 11066. 파일 합치기 (파이썬/자바)"}}},{"node":{"id":"ec4a3877-be55-5424-976d-62d6a6616693","fields":{"slug":"/boj-2293/"},"frontmatter":{"title":"[백준/BOJ] 2293. 동전 1 (파이썬)"}}},{"node":{"id":"0b952d2b-b9ac-5d71-8663-da4961afefa3","fields":{"slug":"/boj-2283/"},"frontmatter":{"title":"[백준/BOJ] 2283. 구간 자르기 (파이썬)"}}},{"node":{"id":"ca6873fb-a438-5c69-93c2-ad28fef74df1","fields":{"slug":"/aws-alb-502/"},"frontmatter":{"title":"AWS ALB가 502를 내뱉는다"}}},{"node":{"id":"f8c1535e-e8c2-5748-9123-dd2e4a8fcaba","fields":{"slug":"/java-exception/"},"frontmatter":{"title":"[Java] Exception에 대한 고찰"}}}]},"previous":{"fields":{"slug":"/boj-3020/"},"frontmatter":{"title":"[백준/BOJ] 3020. 개똥벌레 (파이썬/자바)"}},"next":{"fields":{"slug":"/boj-2560/"},"frontmatter":{"title":"[백준/BOJ] 2560. 짚신벌레 (파이썬)"}}},"pageContext":{"id":"1948a1d0-9b32-57fd-9b38-efcb9fd17ea9","series":null,"previousPostId":"57c571b1-1719-5a80-8532-5a6140d2eefc","nextPostId":"cedea521-2919-5b27-8c40-5b7b7955957d"}},"staticQueryHashes":[],"slicesMap":{}}