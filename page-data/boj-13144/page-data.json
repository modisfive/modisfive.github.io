{"componentChunkName":"component---src-templates-post-jsx","path":"/boj-13144/","result":{"data":{"site":{"siteMetadata":{"title":"pointing the dots"}},"markdownRemark":{"id":"b705571c-56ed-53b8-bc4a-28b8a6ac225b","excerpt":"☘️ 문제 https://www.acmicpc.net/problem/13144 ☘️ 풀이 조합이나 이중 반복문으로 구간을 잡고 그 구간에 반복되는 숫자가 있는지 검사하는 방법으로 문제를 해결할 수 있습니다. 하지만 이런 방법으로는 시간 초과가 발생할 것입니다. 이중 반복문으로 구간을 잡는다면, 구간을 잡고 그 안에서 검사하기 위해 반복문이 한번 더 필요하기 …","html":"<h2>☘️ 문제</h2>\n<p><a href=\"https://www.acmicpc.net/problem/13144\">https://www.acmicpc.net/problem/13144</a></p>\n<h2>☘️ 풀이</h2>\n<p>조합이나 이중 반복문으로 구간을 잡고 그 구간에 반복되는 숫자가 있는지 검사하는 방법으로 문제를 해결할 수 있습니다. 하지만 이런 방법으로는 시간 초과가 발생할 것입니다. 이중 반복문으로 구간을 잡는다면, 구간을 잡고 그 안에서 검사하기 위해 반복문이 한번 더 필요하기 때문에 총 삼중 반복문이 동작합니다.</p>\n<p><strong>투포인터</strong>를 사용해서 구간을 잡고 하나씩 이동해가며 새로 이동한 숫자가 다시 등장한 숫자인지 새로 등장한 숫자인지 판단하면 됩니다.</p>\n<p>구간 안에 숫자가 포함되었는지 판단하기 위한 배열(<code class=\"language-text\">isVisited</code>)이 필요합니다. <code class=\"language-text\">left</code>와 <code class=\"language-text\">right</code>의 값을 각각 0으로 두고 다음과 같이 동작합니다.</p>\n<ul>\n<li><code class=\"language-text\">right</code>의 숫자가 아직 등장하지 않은 새로운 숫자인 경우\n<ol>\n<li><code class=\"language-text\">isVisited</code>에 포함됨을 표시합니다.</li>\n<li>정답(<code class=\"language-text\">answer</code>)에 새로이 만들 수 있는 구간 조합의 갯수를 더합니다.<br>\n지금까지 만들어진 구간이 <code class=\"language-text\">1 4 5</code>(길이 3)이고 구간에 새로 들어오는 숫자가 <code class=\"language-text\">7</code>(길이 1)이라면, 새로 만들 수 있는 구간 조합의 갯수는 새로 만들어지는 구간의 길이(4)만큼 만들어집니다. (<code class=\"language-text\">1 7</code>, <code class=\"language-text\">4 7</code>, <code class=\"language-text\">5 7</code>, <code class=\"language-text\">7</code>) <code class=\"language-text\">left</code>와 <code class=\"language-text\">right</code>를 모두 포함하는 구간의 길이는 <code class=\"language-text\">right + 1 - left</code>입니다.</li>\n<li>right를 하나 이동합니다.</li>\n</ol>\n</li>\n<li><code class=\"language-text\">right</code>의 숫자가 이전에 등장한 숫자인 경우\n<ol>\n<li><code class=\"language-text\">left</code>를 이동시키기 전에 <code class=\"language-text\">left</code>의 숫자는 구간에서 나오게 되기 때문에 <code class=\"language-text\">isVisited</code>에서 포함되지 않음으로 표시합니다.</li>\n<li><code class=\"language-text\">left</code>를 하나 이동합니다.</li>\n</ol>\n</li>\n</ul>\n<h2>☘️ 전체 코드 (파이썬)</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\n\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnumbers <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nisVisited <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">100001</span>\n\nleft<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\nanswer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">and</span> right <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> isVisited<span class=\"token punctuation\">[</span>numbers<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        isVisited<span class=\"token punctuation\">[</span>numbers<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        answer <span class=\"token operator\">+=</span> right <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> left\n        right <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        isVisited<span class=\"token punctuation\">[</span>numbers<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[백준/BOJ] 13144. List of Unique Numbers (파이썬)","date":"April 01, 2024","tags":["PS","BOJ","백준","Python","투포인터"],"series":null},"fields":{"slug":"/boj-13144/"}},"seriesList":{"edges":[{"node":{"id":"6df80ce2-79eb-584d-871c-9ec94a17114c","fields":{"slug":"/n+1-problem/"},"frontmatter":{"title":"[JPA] N+1 문제와 해결법"}}},{"node":{"id":"bcaaf6e4-35eb-571f-9a88-4542117a9f40","fields":{"slug":"/http-vs-https/"},"frontmatter":{"title":"[Network] HTTP와 HTTPS"}}},{"node":{"id":"8894e599-37c7-5129-ab21-244e05db5ad2","fields":{"slug":"/boj-5549/"},"frontmatter":{"title":"[백준/BOJ] 5549. 행성 탐사 (파이썬)"}}},{"node":{"id":"a6cccf72-ac4a-5a0a-94d6-f0fd6a37c67c","fields":{"slug":"/boj-22862/"},"frontmatter":{"title":"[백준/BOJ] 22862. 가장 긴 짝수 연속한 부분 수열 (large) (파이썬)"}}},{"node":{"id":"b705571c-56ed-53b8-bc4a-28b8a6ac225b","fields":{"slug":"/boj-13144/"},"frontmatter":{"title":"[백준/BOJ] 13144. List of Unique Numbers (파이썬)"}}},{"node":{"id":"25166810-bce0-59df-be14-b482f52201b9","fields":{"slug":"/programmers-67259/"},"frontmatter":{"title":"[프로그래머스] 67259. 경주로 건설 (파이썬)"}}},{"node":{"id":"57c571b1-1719-5a80-8532-5a6140d2eefc","fields":{"slug":"/boj-3020/"},"frontmatter":{"title":"[백준/BOJ] 3020. 개똥벌레 (파이썬/자바)"}}},{"node":{"id":"1948a1d0-9b32-57fd-9b38-efcb9fd17ea9","fields":{"slug":"/boj-1365/"},"frontmatter":{"title":"[백준/BOJ] 1365. 꼬인 전깃줄 (파이썬)"}}},{"node":{"id":"cedea521-2919-5b27-8c40-5b7b7955957d","fields":{"slug":"/boj-2560/"},"frontmatter":{"title":"[백준/BOJ] 2560. 짚신벌레 (파이썬)"}}},{"node":{"id":"d4fa2a6f-24b5-5c1e-994d-83f00f4be67d","fields":{"slug":"/boj-11066/"},"frontmatter":{"title":"[백준/BOJ] 11066. 파일 합치기 (파이썬/자바)"}}},{"node":{"id":"ec4a3877-be55-5424-976d-62d6a6616693","fields":{"slug":"/boj-2293/"},"frontmatter":{"title":"[백준/BOJ] 2293. 동전 1 (파이썬)"}}},{"node":{"id":"0b952d2b-b9ac-5d71-8663-da4961afefa3","fields":{"slug":"/boj-2283/"},"frontmatter":{"title":"[백준/BOJ] 2283. 구간 자르기 (파이썬)"}}},{"node":{"id":"ca6873fb-a438-5c69-93c2-ad28fef74df1","fields":{"slug":"/aws-alb-502/"},"frontmatter":{"title":"AWS ALB가 502를 내뱉는다"}}},{"node":{"id":"f8c1535e-e8c2-5748-9123-dd2e4a8fcaba","fields":{"slug":"/java-exception/"},"frontmatter":{"title":"[Java] Exception에 대한 고찰"}}}]},"previous":{"fields":{"slug":"/boj-22862/"},"frontmatter":{"title":"[백준/BOJ] 22862. 가장 긴 짝수 연속한 부분 수열 (large) (파이썬)"}},"next":{"fields":{"slug":"/programmers-67259/"},"frontmatter":{"title":"[프로그래머스] 67259. 경주로 건설 (파이썬)"}}},"pageContext":{"id":"b705571c-56ed-53b8-bc4a-28b8a6ac225b","series":null,"previousPostId":"a6cccf72-ac4a-5a0a-94d6-f0fd6a37c67c","nextPostId":"25166810-bce0-59df-be14-b482f52201b9"}},"staticQueryHashes":[],"slicesMap":{}}