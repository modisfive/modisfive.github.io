{"componentChunkName":"component---src-templates-post-jsx","path":"/boj-2283/","result":{"data":{"site":{"siteMetadata":{"title":"pointing the dots"}},"markdownRemark":{"id":"0b952d2b-b9ac-5d71-8663-da4961afefa3","excerpt":"☘️ 문제 https://www.acmicpc.net/problem/2283 ☘️ 풀이 한 점에 그 점을 포함하는 구간이 몇 개나 있는지를 확인하는 것이 중요합니다. 예를 들어, 2인 점을 포함하는 구간이 3개가 있다고 해보겠습니다. 정답이 되는 구간이 2를 포함하고 있지 않다가 2를 포함하게 되면, 구간에 포함된 길이의 합은 2를 포함하는 구간의 갯수인 3…","html":"<h2>☘️ 문제</h2>\n<p><a href=\"https://www.acmicpc.net/problem/2283\">https://www.acmicpc.net/problem/2283</a></p>\n<h2>☘️ 풀이</h2>\n<p>한 점에 그 점을 포함하는 구간이 몇 개나 있는지를 확인하는 것이 중요합니다. 예를 들어, 2인 점을 포함하는 구간이 3개가 있다고 해보겠습니다. 정답이 되는 구간이 2를 포함하고 있지 않다가 2를 포함하게 되면, 구간에 포함된 길이의 합은 2를 포함하는 구간의 갯수인 3만큼 증가하게 됩니다. 반대로 2를 포함하지 않게 된다면, 3만큼 감소하게 됩니다.</p>\n<p>정답이 되는 구간 [a, b]에 포함된 길이의 총합은 누적합을 이용해 구합니다. 구간 [0, a]에 포함된 길이의 총합에서 구간 [0, a + 1]에 포함된 길이의 총합을 구할 때 필요한 것은 <code class=\"language-text\">a + 1</code>인 점을 포함하는 구간이 몇 개가 있느냐 입니다. 그럼 그 갯수만큼 늘어나게 됩니다.</p>\n<p><code class=\"language-text\">counts</code> 배열을 선언하여 입력받는 구간이 언제 시작하고 언제 끝나는지 저장합니다. 시작점은 구간의 갯수를 하나 늘어나는 것이기 때문에 +1을 하고 끝점은 갯수가 줄어드는 것이기 때문에 -1을 합니다. 순회하면서 <code class=\"language-text\">currCount</code>에 계속 더해주면 <code class=\"language-text\">currCount</code>는 현재 점을 포함하는 구간의 갯수를 가지게 됩니다. 그리고 <code class=\"language-text\">currCount</code> 값을 이용해서 0부터 지금까지의 길이의 총합을 누적합으로 구합니다.</p>\n<p>이후는 단순한 투포인터입니다. 누적합으로 구해진 <code class=\"language-text\">accSum</code>을 이용해서 현재 구간에 포함된 길이의 총합을 구합니다. 만약, 현재 길이의 총합이 <code class=\"language-text\">k</code>보다 부족하다면 <code class=\"language-text\">right</code>를 하나 늘려 구간을 더 포함시켜 봅니다. 반대로 현재 길이의 총합이 <code class=\"language-text\">k</code>보다 크다면 <code class=\"language-text\">left</code>를 하나 늘려 구간을 좁힙니다.</p>\n<h2>☘️ 전체 코드 (파이썬)</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\n\n\nn<span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\naccSum <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000002</span>\ncounts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000002</span>\nMAX <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    start<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    counts<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    counts<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n    MAX <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>MAX<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n\ncurrCount <span class=\"token operator\">=</span> counts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000002</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    accSum<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> accSum<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> currCount\n    currCount <span class=\"token operator\">+=</span> counts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\nleft<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;</span> MAX <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> right <span class=\"token operator\">&lt;</span> MAX <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    s <span class=\"token operator\">=</span> accSum<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> accSum<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> k<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">elif</span> s <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">:</span>\n        right <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> k<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[백준/BOJ] 2283. 구간 자르기 (파이썬)","date":"April 08, 2024","tags":["PS","BOJ","백준","Python","투포인터","누적합"],"series":null},"fields":{"slug":"/boj-2283/"}},"seriesList":{"edges":[{"node":{"id":"6df80ce2-79eb-584d-871c-9ec94a17114c","fields":{"slug":"/n+1-problem/"},"frontmatter":{"title":"[JPA] N+1 문제와 해결법"}}},{"node":{"id":"bcaaf6e4-35eb-571f-9a88-4542117a9f40","fields":{"slug":"/http-vs-https/"},"frontmatter":{"title":"[Network] HTTP와 HTTPS"}}},{"node":{"id":"8894e599-37c7-5129-ab21-244e05db5ad2","fields":{"slug":"/boj-5549/"},"frontmatter":{"title":"[백준/BOJ] 5549. 행성 탐사 (파이썬)"}}},{"node":{"id":"a6cccf72-ac4a-5a0a-94d6-f0fd6a37c67c","fields":{"slug":"/boj-22862/"},"frontmatter":{"title":"[백준/BOJ] 22862. 가장 긴 짝수 연속한 부분 수열 (large) (파이썬)"}}},{"node":{"id":"b705571c-56ed-53b8-bc4a-28b8a6ac225b","fields":{"slug":"/boj-13144/"},"frontmatter":{"title":"[백준/BOJ] 13144. List of Unique Numbers (파이썬)"}}},{"node":{"id":"25166810-bce0-59df-be14-b482f52201b9","fields":{"slug":"/programmers-67259/"},"frontmatter":{"title":"[프로그래머스] 67259. 경주로 건설 (파이썬)"}}},{"node":{"id":"57c571b1-1719-5a80-8532-5a6140d2eefc","fields":{"slug":"/boj-3020/"},"frontmatter":{"title":"[백준/BOJ] 3020. 개똥벌레 (파이썬/자바)"}}},{"node":{"id":"cedea521-2919-5b27-8c40-5b7b7955957d","fields":{"slug":"/boj-2560/"},"frontmatter":{"title":"[백준/BOJ] 2560. 짚신벌레 (파이썬)"}}},{"node":{"id":"d4fa2a6f-24b5-5c1e-994d-83f00f4be67d","fields":{"slug":"/boj-11066/"},"frontmatter":{"title":"[백준/BOJ] 11066. 파일 합치기 (파이썬/자바)"}}},{"node":{"id":"1948a1d0-9b32-57fd-9b38-efcb9fd17ea9","fields":{"slug":"/boj-1365/"},"frontmatter":{"title":"[백준/BOJ] 1365. 꼬인 전깃줄 (파이썬)"}}},{"node":{"id":"ec4a3877-be55-5424-976d-62d6a6616693","fields":{"slug":"/boj-2293/"},"frontmatter":{"title":"[백준/BOJ] 2293. 동전 1 (파이썬)"}}},{"node":{"id":"0b952d2b-b9ac-5d71-8663-da4961afefa3","fields":{"slug":"/boj-2283/"},"frontmatter":{"title":"[백준/BOJ] 2283. 구간 자르기 (파이썬)"}}},{"node":{"id":"ca6873fb-a438-5c69-93c2-ad28fef74df1","fields":{"slug":"/aws-alb-502/"},"frontmatter":{"title":"AWS ALB가 502를 내뱉는다"}}}]},"previous":{"fields":{"slug":"/boj-2293/"},"frontmatter":{"title":"[백준/BOJ] 2293. 동전 1 (파이썬)"}},"next":{"fields":{"slug":"/aws-alb-502/"},"frontmatter":{"title":"AWS ALB가 502를 내뱉는다"}}},"pageContext":{"id":"0b952d2b-b9ac-5d71-8663-da4961afefa3","series":null,"previousPostId":"ec4a3877-be55-5424-976d-62d6a6616693","nextPostId":"ca6873fb-a438-5c69-93c2-ad28fef74df1"}},"staticQueryHashes":[],"slicesMap":{}}