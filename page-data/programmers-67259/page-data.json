{"componentChunkName":"component---src-templates-post-jsx","path":"/programmers-67259/","result":{"data":{"site":{"siteMetadata":{"title":"pointing the dots"}},"markdownRemark":{"id":"e4d9fcdf-08d6-5089-9acd-309ebae9cc88","excerpt":"☘️ 문제 https://school.programmers.co.kr/learn/courses/30/lessons/67259 ☘️ 풀이 그냥 직진으로 이동하느냐, 90도로 꺾고 이동하느냐에 따라 더해지는 비용이 다릅니다. 따라서 현재 위치까지 올 수 있는 최소 비용을 방향에 따라 각각 따로 저장해야 합니다. 보통의 BFS 문제에서는 단순히 현재 위치까지 올 …","html":"<h2>☘️ 문제</h2>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/67259\">https://school.programmers.co.kr/learn/courses/30/lessons/67259</a></p>\n<h2>☘️ 풀이</h2>\n<p>그냥 직진으로 이동하느냐, 90도로 꺾고 이동하느냐에 따라 더해지는 비용이 다릅니다. 따라서 현재 위치까지 올 수 있는 최소 비용을 방향에 따라 각각 따로 저장해야 합니다.</p>\n<p>보통의 BFS 문제에서는 단순히 현재 위치까지 올 수 있는 최소 비용을 저장하는데, 이 문제에서는 움직이는 방향에 따라 비용이 달라지기 때문에 예외 상황이 발생합니다.</p>\n<h2>☘️ 전체 코드 (파이썬)</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\ndy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\nINF <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inf\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">getCost</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> prevDir<span class=\"token punctuation\">,</span> currDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> prevDir <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">100</span>\n    <span class=\"token keyword\">elif</span> prevDir <span class=\"token operator\">==</span> currDir<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> visited<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>prevDir<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">100</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> visited<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>prevDir<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">600</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span>\n\n    visited <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>INF<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    visited<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span>\n    que <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    que<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    answer <span class=\"token operator\">=</span> INF\n\n    <span class=\"token keyword\">while</span> que<span class=\"token punctuation\">:</span>\n        y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> prevDir <span class=\"token operator\">=</span> que<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">,</span> visited<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>prevDir<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            cost <span class=\"token operator\">=</span> getCost<span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> prevDir<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> ny <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> nx <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">and</span> board<span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> cost <span class=\"token operator\">&lt;</span> visited<span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                visited<span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cost\n                que<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ny<span class=\"token punctuation\">,</span> nx<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[프로그래머스] 67259. 경주로 건설 (파이썬)","date":"April 03, 2024","update":null,"tags":["PS","프로그래머스","Python","BFS"],"series":null},"fields":{"slug":"/programmers-67259/"}},"seriesList":{"edges":[{"node":{"id":"4592dece-d2dc-56b2-9ee7-998105faeacb","fields":{"slug":"/n+1-problem/"},"frontmatter":{"title":"[JPA] N+1 문제와 해결법"}}},{"node":{"id":"0fb328cc-322d-5275-ad7d-7eb023f3da9d","fields":{"slug":"/boj-5549/"},"frontmatter":{"title":"[백준/BOJ] 5549. 행성 탐사 (파이썬)"}}},{"node":{"id":"a8778346-0bac-558e-a4da-44fdee882c4b","fields":{"slug":"/boj-13144/"},"frontmatter":{"title":"[백준/BOJ] 13144. List of Unique Numbers (파이썬)"}}},{"node":{"id":"128f11aa-0fef-5423-8348-8a502f8b36b7","fields":{"slug":"/boj-22862/"},"frontmatter":{"title":"[백준/BOJ] 22862. 가장 긴 짝수 연속한 부분 수열 (large) (파이썬)"}}},{"node":{"id":"e4d9fcdf-08d6-5089-9acd-309ebae9cc88","fields":{"slug":"/programmers-67259/"},"frontmatter":{"title":"[프로그래머스] 67259. 경주로 건설 (파이썬)"}}},{"node":{"id":"4656afc8-8382-52f8-9c89-b24cbda3945a","fields":{"slug":"/boj-3020/"},"frontmatter":{"title":"[백준/BOJ] 3020. 개똥벌레 (파이썬/자바)"}}},{"node":{"id":"012d1366-0094-549e-b5ab-61e87a021f06","fields":{"slug":"/boj-1365/"},"frontmatter":{"title":"[백준/BOJ] 1365. 꼬인 전깃줄 (파이썬)"}}},{"node":{"id":"bbc49cbe-fa02-5084-9093-23c8c77cc792","fields":{"slug":"/boj-2560/"},"frontmatter":{"title":"[백준/BOJ] 2560. 짚신벌레 (파이썬)"}}},{"node":{"id":"b63e0485-8635-541c-89eb-f8ea3b0c60ab","fields":{"slug":"/boj-11066/"},"frontmatter":{"title":"[백준/BOJ] 11066. 파일 합치기 (파이썬/자바)"}}},{"node":{"id":"463564b4-7110-5bd6-8d64-daa455416155","fields":{"slug":"/boj-2293/"},"frontmatter":{"title":"[백준/BOJ] 2293. 동전 1 (파이썬)"}}},{"node":{"id":"0610315c-bfea-5149-9d68-b1041aebb8c8","fields":{"slug":"/boj-2283/"},"frontmatter":{"title":"[백준/BOJ] 2283. 구간 자르기 (파이썬)"}}}]},"previous":{"fields":{"slug":"/boj-22862/"},"frontmatter":{"title":"[백준/BOJ] 22862. 가장 긴 짝수 연속한 부분 수열 (large) (파이썬)"}},"next":{"fields":{"slug":"/boj-3020/"},"frontmatter":{"title":"[백준/BOJ] 3020. 개똥벌레 (파이썬/자바)"}}},"pageContext":{"id":"e4d9fcdf-08d6-5089-9acd-309ebae9cc88","series":null,"previousPostId":"128f11aa-0fef-5423-8348-8a502f8b36b7","nextPostId":"4656afc8-8382-52f8-9c89-b24cbda3945a"}},"staticQueryHashes":[],"slicesMap":{}}