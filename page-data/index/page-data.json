{"componentChunkName":"component---src-pages-index-jsx","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"pointing the dots"}},"allMarkdownRemark":{"group":[{"fieldValue":"BFS","totalCount":1},{"fieldValue":"BOJ","totalCount":9},{"fieldValue":"Chrome Extension","totalCount":1},{"fieldValue":"JPA","totalCount":1},{"fieldValue":"Java","totalCount":2},{"fieldValue":"LIS","totalCount":1},{"fieldValue":"N+1","totalCount":1},{"fieldValue":"Notion API","totalCount":1},{"fieldValue":"PS","totalCount":10},{"fieldValue":"Python","totalCount":10},{"fieldValue":"Spring","totalCount":1},{"fieldValue":"whileTrue","totalCount":1},{"fieldValue":"누적합","totalCount":4},{"fieldValue":"다이나믹프로그래밍","totalCount":4},{"fieldValue":"백준","totalCount":9},{"fieldValue":"이분탐색","totalCount":1},{"fieldValue":"크롬 확장 프로그램","totalCount":1},{"fieldValue":"투포인터","totalCount":3},{"fieldValue":"프로그래머스","totalCount":1}],"nodes":[{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/2283 ☘️ 풀이 한 점에 그 점을 포함하는 구간이 몇 개나 있는지를 확인하는 것이 중요합니다. 예를 들어, 2인 점을 포함하는 구간이 3개가 있다고 해보겠습니다. 정답이 되는 구간이 2를 포함하고 있지 않다가 2를 포함하게 되면, 구간에 포함된 길이의 합은 2를 포함하는 구간의 갯수인 3…","fields":{"slug":"/boj-2283/"},"frontmatter":{"date":"April 08, 2024","update":null,"title":"[백준/BOJ] 2283. 구간 자르기 (파이썬)","description":null,"tags":["PS","BOJ","백준","Python","투포인터","누적합"]}},{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/2293 ☘️ 풀이 주어진 동전으로 원하는 금액을 만드는 방법을 구하는 문제는 대표적인 dp 문제입니다. 하지만 이 문제에서 한 가지 조건이 있는데, 사용하는 동전의 구성은 같고 순서만 다른 경우는 모두 같은 경우라는 것입니다. 예를 들어, 사용할 수 있는 동전이 1원과 2원이 있다고 해보겠…","fields":{"slug":"/boj-2293/"},"frontmatter":{"date":"April 04, 2024","update":null,"title":"[백준/BOJ] 2293. 동전 1 (파이썬)","description":null,"tags":["PS","BOJ","백준","Python","다이나믹프로그래밍"]}},{"excerpt":"☘️ 문제 https://school.programmers.co.kr/learn/courses/30/lessons/67259 ☘️ 풀이 그냥 직진으로 이동하느냐, 90도로 꺾고 이동하느냐에 따라 더해지는 비용이 다릅니다. 따라서 현재 위치까지 올 수 있는 최소 비용을 방향에 따라 각각 따로 저장해야 합니다. 보통의 BFS 문제에서는 단순히 현재 위치까지 올 …","fields":{"slug":"/programmers-67259/"},"frontmatter":{"date":"April 03, 2024","update":null,"title":"[프로그래머스] 67259. 경주로 건설 (파이썬)","description":null,"tags":["PS","프로그래머스","Python","BFS"]}},{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/3020 ☘️ 풀이 높이가 n인 장애물은 1~n 사이의 높이로 날아가는 경우에도 모두 부딪히게 됩니다. 예를 들어, 높이가 4인 장애물은 높이 1로 날라가도, 높이 2로 날라가도, 높이 3으로 날라가도, 높이 4로 날라가도 모두 부딪힙니다. 이를 이용해서 우선 각 높이들의 갯수을 모두 입력 …","fields":{"slug":"/boj-3020/"},"frontmatter":{"date":"April 03, 2024","update":null,"title":"[백준/BOJ] 3020. 개똥벌레 (파이썬/자바)","description":null,"tags":["PS","BOJ","백준","Python","Java","누적합"]}},{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/2560 ☘️ 풀이 짚신벌레는 태어난지 날이 지나고 날이 될 때까지 개체를 만들어낼 수 있습니다. 반대로 날짜 기준으로 한다면, 현재 날짜를 라고 할 때 일부터 일 사이에 있는 짚신벌레들이 개체를 만들어낼 수 있습니다. 즉, 일부터 일 사이에 있는 짚신벌레의 수만큼 늘어나게 됩니다.  같은 …","fields":{"slug":"/boj-2560/"},"frontmatter":{"date":"April 03, 2024","update":null,"title":"[백준/BOJ] 2560. 짚신벌레 (파이썬)","description":null,"tags":["PS","BOJ","백준","Python","누적합","다이나믹프로그래밍"]}},{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/1365 ☘️ 풀이 대표적인 LIS(최장 증가 부분 수열) 문제입니다. 전깃줄이 꼬여있지 않기 위해서는 오른편에서 연결된 전봇대 번호가 순서대로 증가해야 합니다. 예를 들어 오른편의 전봇대 중에서 선택된 전봇대의 번호가 라면, 2와 4를 연결할 때 꼬이게 됩니다. 또한, N이 최대 10만이기…","fields":{"slug":"/boj-1365/"},"frontmatter":{"date":"April 03, 2024","update":null,"title":"[백준/BOJ] 1365. 꼬인 전깃줄 (파이썬)","description":null,"tags":["PS","BOJ","백준","Python","다이나믹프로그래밍","이분탐색","LIS"]}},{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/11066 ☘️ 풀이 (C1, C2, C3, C4)로 묶인 임시 파일과 (C5, C6)으로 묶인 임시 파일은 합치는 경우, 발생하는 비용은 C1 + C2 + ... + C6 입니다. 이렇게 합칠 때마다, 구성 요소들의 파일 크기들을 모두 더하게 됩니다. 연속된 파일들끼리 합치기 때문에 누적합…","fields":{"slug":"/boj-11066/"},"frontmatter":{"date":"April 03, 2024","update":null,"title":"[백준/BOJ] 11066. 파일 합치기 (파이썬/자바)","description":null,"tags":["PS","BOJ","백준","Python","Java","다이나믹프로그래밍"]}},{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/5549 ☘️ 풀이 주어진 공간안에 각각 \"J\", \"O\", \"I\"가 몇 개씩 있는지 일일이 세보는 것도 방법이지만, 시간 초과가 발생합니다. 누적합을 사용해서 최적화할 수 있습니다. 현재까지 \"J\", \"O\", \"I\"가 몇 번씩 등장했는지 기록하기 위한 2차원 배열 를 선언합니다. 현재의 bo…","fields":{"slug":"/boj-5549/"},"frontmatter":{"date":"April 01, 2024","update":null,"title":"[백준/BOJ] 5549. 행성 탐사 (파이썬)","description":null,"tags":["PS","BOJ","백준","Python","누적합"]}},{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/22862 ☘️ 풀이 조합이나 이중 반복문으로 구간을 잡고 그 구간이 홀수를 최대 k번 포함하는지 판단하여 문제를 해결할 수 있습니다. 하지만 이런 방법으로는 시간 초과가 발생할 것입니다. 이중 반복문으로 구간을 잡는다면, 구간을 잡고 그 안에서 홀수 갯수를 검사하기 위해 반복문이 한번 더 …","fields":{"slug":"/boj-22862/"},"frontmatter":{"date":"April 01, 2024","update":null,"title":"[백준/BOJ] 22862. 가장 긴 짝수 연속한 부분 수열 (large) (파이썬)","description":null,"tags":["PS","BOJ","백준","Python","투포인터"]}},{"excerpt":"☘️ 문제 https://www.acmicpc.net/problem/13144 ☘️ 풀이 조합이나 이중 반복문으로 구간을 잡고 그 구간에 반복되는 숫자가 있는지 검사하는 방법으로 문제를 해결할 수 있습니다. 하지만 이런 방법으로는 시간 초과가 발생할 것입니다. 이중 반복문으로 구간을 잡는다면, 구간을 잡고 그 안에서 검사하기 위해 반복문이 한번 더 필요하기 …","fields":{"slug":"/boj-13144/"},"frontmatter":{"date":"April 01, 2024","update":null,"title":"[백준/BOJ] 13144. List of Unique Numbers (파이썬)","description":null,"tags":["PS","BOJ","백준","Python","투포인터"]}},{"excerpt":"프로젝트 시작 계기 2023년 SSAFY를 다니면서 3번의 프로젝트를 진행했고, 2024년이 되면서 프로젝트보다는 알고리즘 문제 풀이나 CS 공부를 중심적으로 해야겠다고 생각했습니다. 포트폴리오에 쓸 프로젝트는 완성되었으니 실질적인 취업 준비를 하려고 했습니다. 어떻게 하면 좋은 포트폴리오를 작성하고 취업을 잘할 수 있을까 고민하던 중, 블로그 제목에 끌…","fields":{"slug":"/whiletrue-01/"},"frontmatter":{"date":"March 14, 2024","update":null,"title":"whileTrue 프로젝트 후기","description":null,"tags":["whileTrue","Chrome Extension","크롬 확장 프로그램","Notion API"]}},{"excerpt":"N+1 문제가 뭘까? 하나의 엔티티 전체를 조회하면서 그와 연관된 다른 엔티티를 조회할 때, 여러 번의 쿼리가 발생하는 문제입니다. 예를 들어, Team 엔티티와 Member 엔티티 사이에 다음과 같이 1:N(일대다)의 관계가 있다고 해보겠습니다.  그리고 각각의 엔티티는 다음과 같이 정의되어 있습니다. 총 3개의 팀이 있고, 각 팀에는 3명의 멤버가 있…","fields":{"slug":"/n+1-problem/"},"frontmatter":{"date":"September 30, 2023","update":"Sep 30, 2023","title":"[JPA] N+1 문제와 해결법","description":null,"tags":["Spring","JPA","N+1"]}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}