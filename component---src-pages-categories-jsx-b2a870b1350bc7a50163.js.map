{"version":3,"file":"component---src-pages-categories-jsx-b2a870b1350bc7a50163.js","mappings":"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","sources":["webpack://gatsby-starter-hoodie/./src/components/CategoriesList/index.jsx","webpack://gatsby-starter-hoodie/./src/pages/categories.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\n\nimport Title from \"components/Title\"\nimport Divider from \"components/Divider\"\n\nconst CategoriesListWrapper = styled.div`\n  margin-bottom: 60px;\n  @media (max-width: 768px) {\n    padding: 0 10px;\n  }\n`\n\nconst CategoriesWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 768px) {\n    padding: 0 5px;\n  }\n`\n\nconst CategoriesInform = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.colors.tertiaryText};\n\n  & > span {\n    margin: 0 5px;\n  }\n`\n\nconst Date = styled.p`\n  font-size: 14.4px;\n`\n\nconst PostCount = styled.p`\n  font-size: 14.4px;\n`\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  )\n}\n\nconst CategoriesList = ({ categoriesList }) => {\n  const [categoriesCount, setCategoriesCount] = useState(10)\n\n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && categoriesCount < categoriesList.length) {\n      setTimeout(() => setCategoriesCount(categoriesCount + 10), 300)\n    }\n  }, 250)\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleMoreLoad)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleMoreLoad)\n    }\n  }, [categoriesCount, categoriesList])\n\n  useEffect(() => {\n    setCategoriesCount(10)\n  }, [categoriesList])\n\n  return (\n    <CategoriesListWrapper>\n      {categoriesList.slice(0, categoriesCount).map((categories, i) => {\n        return (\n          <>\n            <CategoriesWrapper>\n              <Title size=\"bg\">\n                <Link\n                  to={`/categories/${_.replace(categories.name, /\\s/g, \"-\")}`}\n                >\n                  {categories.name} ({categories.posts.length})\n                </Link>\n              </Title>\n              <CategoriesInform>\n                <Date>Last updated on {categories.lastUpdated}</Date>\n              </CategoriesInform>\n            </CategoriesWrapper>\n\n            {categoriesCount - 1 !== i && categoriesList.length - 1 !== i && (\n              <Divider mt=\"48px\" mb=\"32px\" />\n            )}\n          </>\n        )\n      })}\n    </CategoriesListWrapper>\n  )\n}\n\nexport default CategoriesList\n","import React from \"react\"\nimport { flow, map, groupBy, sortBy, filter, reverse } from \"lodash/fp\"\nimport styled from \"styled-components\"\nimport SEO from \"components/SEO\"\n\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport Title from \"components/Title\"\nimport CategoriesList from \"components/CategoriesList\"\nimport VerticleSpace from \"components/VerticalSpace\"\nimport NoContent from \"components/NoContent\"\n\nimport { title, description, siteUrl } from \"../../blog-config\"\n\nconst TagListWrapper = styled.div`\n  margin-top: 20px;\n\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`\n\nconst CategoriesPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n  const categories = flow(\n    map(post => ({ ...post.frontmatter, slug: post.fields.slug })),\n    groupBy(\"category\"),\n    map(categories => ({\n      name: categories[0].category,\n      posts: categories,\n      lastUpdated: categories[0].date,\n    })),\n    sortBy(categories => new Date(categories.lastUpdated)),\n    filter(categories => categories.name),\n    reverse\n  )(posts)\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n      <TagListWrapper>\n        {categories.length > 0 && (\n          <Title size=\"sm\">There are {categories.length} categories.</Title>\n        )}\n      </TagListWrapper>\n\n      {categories.length === 0 && <NoContent name=\"categories\" />}\n\n      <VerticleSpace size={32} />\n\n      <CategoriesList categoriesList={categories} />\n    </Layout>\n  )\n}\n\nexport default CategoriesPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      group(field: { frontmatter: { category: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["CategoriesListWrapper","styled","div","withConfig","displayName","componentId","CategoriesWrapper","CategoriesInform","props","theme","colors","tertiaryText","Date","p","_ref","categoriesList","categoriesCount","setCategoriesCount","useState","handleMoreLoad","_throttle","document","documentElement","scrollHeight","scrollTop","clientHeight","length","setTimeout","useEffect","window","addEventListener","removeEventListener","React","slice","map","categories","i","Title","size","Link","to","_replace","name","posts","lastUpdated","Divider","mt","mb","TagListWrapper","data","allMarkdownRemark","nodes","_flow","_map","post","frontmatter","slug","fields","_groupBy","category","date","_sortBy","_filter","_reverse","Layout","SEO","title","description","url","siteUrl","NoContent","VerticleSpace","CategoriesList"],"sourceRoot":""}